strictness allow 46;
strictness allow 1007;

namespace com.blades.goap;

external Boolean {}
external String {}

/* */
/* ACTION */
/* */
class Action {
	depend com.blades.util.Dice;
	
	const RATING = "rating"; const DOWNTIME = "downtime"; const GROUP = "group";
	/* downtime actions */
	const ACQUIRE_ASSET = "acquire asset"; const LONG_TERM_PROJECT = "long term project"; const RECOVER = "recover"; const REDUCE_HEAT = "reduce heat"; const TRAINING = "training"; const INDULGE_VICE = "indulge vice";

	* causes <@>- * State conditions;
	* effect <@>- * State consequences;
}

/* */
/* ACTOR */
/* */
class Actor {}

/* */
/* STATE */
/* */
class State {
	depend java.util.functions.Predicate;

	/* there isn't an effective English verb for "being somewhere" that doesn't collide with the word "being" which is already in use; I tried put/putting and decided to use place/placing to reflect that it relates to "being placed" */
	const BEING = "is"; const GETTING = "gets"; const DOING = "does"; const PUTTING = "puts";

	const DO_ACTIVITY = "does activity"; 
	const SHAKE_HOLD = "has hold"; 
	const STAKE_CLAIM = "has claim";
	const ADVANCE = "does advance"; 
	const EXPOSE = "does expose";

	String name; 
	Predicate predicate;
	float cost = 1f;
	
	boolean is() { return predicate.startsWith(BEING); }
	boolean gets() { return predicate.startsWith(GETTING); }
	boolean does() { return predicate.startsWith(DOING); }
	boolean puts() { return predicate.startsWith(PUTTING); }
}